name: Docker

on:
  workflow_dispatch:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

env:
  IMAGE_NAME: cfb-web-v2
  NODE_ENV: production
  VITE_API_URL: https://api.collegefootballdata.com
  VITE_GTAG_ID: G-BPYY3G7LL2
jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            docker build . --file Dockerfile
          fi
  # Push image to GitHub Package Registry.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    env:
      NODE_ENV: production
      VITE_API_URL: https://api.collegefootballdata.com
      VITE_GTAG_ID: G-BPYY3G7LL2

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --build-arg VITE_API_URL=https://api.collegefootballdata.com --build-arg VITE_GTAG_ID=G-BPYY3G7LL2 --tag image

      - name: Log into registry
        run: echo "${{ secrets.GH_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/cfbd/cfb-web-v2/$IMAGE_NAME
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag image $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
  deploy:
    needs: push
    runs-on: ubuntu-latest
    steps:
    - name: Deploy via SSH
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          cd /docker/cfb
          docker pull docker.pkg.github.com/cfbd/cfb-web-v2/cfb-web-v2
          docker-compose up -d
